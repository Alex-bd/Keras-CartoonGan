
import os
import numpy as np

def load_model():
    from network.Transformer import Transformer
    from cartoon import MODEL_ROOT
    import torch
    model = Transformer()
    model.load_state_dict(torch.load(os.path.join(MODEL_ROOT, "Hayao_net_G_float.pth")))
    model.eval()
    model.float()
    return model


if __name__ == '__main__':
    model = load_model()
    
    params = []
    for i, p in enumerate(model.parameters()):
        param = p.data.numpy()
        np.save("Hayao/{}".format(i), param)
        print(i, param.shape)


# 0 (64, 3, 7, 7)
# 1 (64,)
# 2 (64,)
# 3 (64,)
# 4 (128, 64, 3, 3)
# 5 (128,)
# 6 (128, 128, 3, 3)
# 7 (128,)
# 8 (128,)
# 9 (128,)
# 10 (256, 128, 3, 3)
# 11 (256,)
# 12 (256, 256, 3, 3)
# 13 (256,)
# 14 (256,)
# 15 (256,)
# 16 (256, 256, 3, 3)
# 17 (256,)
# 18 (256,)
# 19 (256,)
# 20 (256, 256, 3, 3)
# 21 (256,)
# 22 (256,)
# 23 (256,)
# 24 (256, 256, 3, 3)
# 25 (256,)
# 26 (256,)
# 27 (256,)
# 28 (256, 256, 3, 3)
# 29 (256,)
# 30 (256,)
# 31 (256,)
# 32 (256, 256, 3, 3)
# 33 (256,)
# 34 (256,)
# 35 (256,)
# 36 (256, 256, 3, 3)
# 37 (256,)
# 38 (256,)
# 39 (256,)
# 40 (256, 256, 3, 3)
# 41 (256,)
# 42 (256,)
# 43 (256,)
# 44 (256, 256, 3, 3)
# 45 (256,)
# 46 (256,)
# 47 (256,)
# 48 (256, 256, 3, 3)
# 49 (256,)
# 50 (256,)
# 51 (256,)
# 52 (256, 256, 3, 3)
# 53 (256,)
# 54 (256,)
# 55 (256,)
# 56 (256, 256, 3, 3)
# 57 (256,)
# 58 (256,)
# 59 (256,)
# 60 (256, 256, 3, 3)
# 61 (256,)
# 62 (256,)
# 63 (256,)
# 64 (256, 256, 3, 3)
# 65 (256,)
# 66 (256,)
# 67 (256,)
# 68 (256, 256, 3, 3)
# 69 (256,)
# 70 (256,)
# 71 (256,)
# 72 (256, 256, 3, 3)
# 73 (256,)
# 74 (256,)
# 75 (256,)
# 76 (256, 256, 3, 3)
# 77 (256,)
# 78 (256,)
# 79 (256,)
# 80 (256, 128, 3, 3)
# 81 (128,)
# 82 (128, 128, 3, 3)
# 83 (128,)
# 84 (128,)
# 85 (128,)
# 86 (128, 64, 3, 3)
# 87 (64,)
# 88 (64, 64, 3, 3)
# 89 (64,)
# 90 (64,)
# 91 (64,)
# 92 (3, 64, 7, 7)
# 93 (3,)

